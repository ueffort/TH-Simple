#!/bin/bash
CURRENT_PATH=$(pwd);
ROOT_PATH=$(cd `dirname $0`/../; pwd);
cd $CURRENT_PATH;

. $ROOT_PATH/script/common.sh

#开始
function usage() {
	echo "usage: <exec> --param"
	echo "  type: upload download shell"
}

if [ $? != 0 ] ; then usage >&2 ; exit 1 ; fi

CMD=$1;

case $CMD in
	upload)
		param=
		i=1
		b[1]="."
		b[2]="."
		for p in $*
		do
			case $p in 
				upload)
				;;
				-*)
					param=$param""$p" "
				;;
				*)
					b[$i]=$p
					i=$[$i + 1]
				;;
			esac
		done
		source=${b[1]}
		dest=${b[2]}
		local_path=$LOCAL_PATH
		remote_path=$REMOTE_PATH
		if [ ${source:0:1} = "/" ]
		then
			local_path=`dirname $source`
			source=`basename $source`
		fi
		if [ ${dest:0:1} = "/" ]
		then
			remote_path=$dest"/"
		fi
		param="PARAM='"$param"' SOURCE=$source LOCAL_PATH=$local_path LOCAL_TMP=$LOCAL_TMP REMOTE_PATH=$remote_path REMOTE_TMP=$REMOTE_TMP USER=$USER PROJECT=$PROJECT"
		ansible_play cluster "$param" "$CMD"
		out_local=$ANSIBLE_OUT
	;;
	download)
		param=
		i=1
		b[1]="."
		b[2]="."
		for p in $*
		do
			case $p in 
				download)
				;;
				-*)
					param=$param""$p" "
				;;
				*)
					b[$i]=$p
					i=$[$i + 1]
				;;
			esac
		done
		source=${b[1]}
		dest=${b[2]}
		local_path=$LOCAL_PATH
		remote_path=$REMOTE_PATH
		if [ ${source:0:1} = "/" ]
		then
			remote_path=`dirname $source`
			source=`basename $source`
		fi
		if [ ${dest:0:1} = "/" ]
		then
			local_path=$dest
		fi
		param="PARAM='"$param"' SOURCE=$source LOCAL_PATH=$local_path LOCAL_TMP=$LOCAL_TMP REMOTE_PATH=$remote_path REMOTE_TMP=$REMOTE_TMP USER=$USER PROJECT=$PROJECT"
		ansible_play cluster "$param" "$CMD"
		out_local=$ANSIBLE_OUT
	;;
	shell)
		for p in $*
		do
			case $p in 
				$CMD)
				;;
				*)
					param=$param""$p" ";
				;;
			esac
		done
		param="SHELL='"$param"' PROJECT_PATH={PROJECT_PATH}"
		cluster_host=$CLUSTER_HOST
		if [ $cluster_host = $LOCAL_MODE -o $cluster_host = $BOTH_MODE ]
		then
			shell=`replace_globals "$param" $LOCAL_MODE`
			ansible_play shell "$shell" "$LOCAL_MODE"
			out_local=$ANSIBLE_OUT
		fi
		if [ $cluster_host = $REMOTE_MODE -o $cluster_host = $BOTH_MODE ]
		then
			shell=`replace_globals "$param" $REMOTE_MODE`
			ansible_play shell "$shell" "$REMOTE_MODE"
			out_remote=$ANSIBLE_OUT
		fi
	;;
	*)
		usage
		exit
	;;
esac
e=0
for i in $out_local $out_remote
do
	if [ -z $i ]
	then
		continue
	fi
	parse_ansible_return $i
	e=$[$e + $?]
done
exit $e

